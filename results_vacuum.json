{
    "translation_params": {
        "output_libs_folder": "/home/mehdimounsif/Codes/my_libs/test_sode",
        "lib_names": {
            "mome": "initial_mome",
            "momeutils": "base_sode_utils",
            "mcodeutils": "sode_code_utils"
        },
        "base_lib_path": "/home/mehdimounsif/Codes/my_libs/m2me",
        "initial_script": "/home/mehdimounsif/Codes/SystemDyn/workflow.py",
        "output_script_name": "sode_main.py",
        "files_to_carry_over": [
            "/home/mehdimounsif/Codes/SystemDyn/sode_utils.py"
        ]
    },
    "required": {
        "mome": [
            "to_markdown_table",
            "get_node_section",
            "get_all_sections",
            "init_obsidian_vault",
            "init_obsidian",
            "init_codebase_tags",
            "get_existing_tags",
            "collect_node_contents",
            "tags_filter",
            "from_markdown_table_to_df",
            "check_section",
            "collect_files_in_folder",
            "add_node_to_graph",
            "get_short_hash",
            "handle_tags_representation",
            "make_formatted_contents",
            "format_for_obsidian",
            "format_helper_for_obsidian",
            "update_parent_node_links",
            "update_section",
            "handle_graph_forces"
        ],
        "momeutils": [
            "uinput",
            "crline",
            "crprint",
            "cprint",
            "print_rgb_text",
            "load_icl",
            "parse_json",
            "ask_llm",
            "multi_turn_conversation",
            "call_recap_to_file",
            "play_sound_in_thread"
        ],
        "mcodeutils": [
            "find_function_calls",
            "add_module_to_function_call",
            "get_function_kw_args",
            "get_left_side",
            "function_params_from_source_reference",
            "get_function_params_from_module",
            "collect_module_path",
            "get_function_code",
            "get_function_params",
            "get_function_call_arguments",
            "align_function_call_params",
            "find_unused_variables",
            "add_function_arguments",
            "get_lines_with_variables",
            "get_lines_with_variable",
            "construct_dict",
            "handle_value",
            "find_problematic_stores",
            "function_call_assignment",
            "get_available_vars_in_function",
            "find_line_number",
            "get_vars_before_line"
        ],
        "magents": [],
        "flowme": []
    }
}